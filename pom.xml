<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 
         http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>edu.umd.arcrouting</groupId>
    <artifactId>arc-routing-library</artifactId>
    <version>1.0.0</version>
    <packaging>jar</packaging>

    <name>Arc Routing Library</name>
    <description>A collection of problem abstractions and solver implementations for common arc-routing problems</description>

    <properties>
        <maven.compiler.source>8</maven.compiler.source>
        <maven.compiler.target>8</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.plugin.version>3.11.0</maven.compiler.plugin.version>
        <maven.surefire.plugin.version>3.0.0</maven.surefire.plugin.version>
        <maven.source.plugin.version>3.2.1</maven.source.plugin.version>
        <maven.javadoc.plugin.version>3.5.0</maven.javadoc.plugin.version>
        <maven.shade.plugin.version>3.4.1</maven.shade.plugin.version>
        <teavm.version>0.12.3</teavm.version>
    </properties>

    <licenses>
        <license>
            <name>MIT License</name>
            <url>https://opensource.org/licenses/MIT</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <developers>
        <developer>
            <name>Oliver Lum</name>
            <email>oliver.lum@umd.edu</email>
            <organization>University of Maryland, College Park</organization>
            <organizationUrl>https://www.umd.edu</organizationUrl>
        </developer>
    </developers>

    <dependencies>
        <!-- Apache Commons Lang -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>3.3.2</version>
        </dependency>

        <!-- Gephi Toolkit -->
        <dependency>
            <groupId>org.gephi</groupId>
            <artifactId>gephi-toolkit</artifactId>
            <version>0.9.3</version>
        </dependency>

        <!-- JavaMail API -->
        <dependency>
            <groupId>javax.mail</groupId>
            <artifactId>mail</artifactId>
            <version>1.4.7</version>
        </dependency>

        <!-- Trove Collections - JetBrains IntelliJ fork -->
        <dependency>
            <groupId>org.jetbrains.intellij.deps</groupId>
            <artifactId>trove4j</artifactId>
            <version>1.0.20200330</version>
        </dependency>

        <!-- JUnit for testing -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.11</version>
            <scope>test</scope>
        </dependency>

        <!-- Hamcrest for testing -->
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-core</artifactId>
            <version>1.3</version>
            <scope>test</scope>
        </dependency>

        <!-- Apache XPath for XML processing -->
        <dependency>
            <groupId>xml-apis</groupId>
            <artifactId>xml-apis</artifactId>
            <version>1.4.01</version>
        </dependency>

        <!-- JGraphT for graph algorithms -->
        <dependency>
            <groupId>org.jgrapht</groupId>
            <artifactId>jgrapht-core</artifactId>
            <version>1.5.2</version>
        </dependency>

        <!-- TeaVM classlib (required at compile time) -->
        <dependency>
            <groupId>org.teavm</groupId>
            <artifactId>teavm-classlib</artifactId>
            <version>${teavm.version}</version>
            <scope>provided</scope>
        </dependency>
    </dependencies>

    <build>
        <sourceDirectory>src</sourceDirectory>
        <testSourceDirectory>test</testSourceDirectory>
        <outputDirectory>target/classes</outputDirectory>
        <testOutputDirectory>target/test-classes</testOutputDirectory>

        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven.compiler.plugin.version}</version>
                <configuration>
                    <source>${maven.compiler.source}</source>
                    <target>${maven.compiler.target}</target>
                    <encoding>${project.build.sourceEncoding}</encoding>
                    <failOnError>false</failOnError>
                    <compilerArgs>
                        <arg>-Xlint:none</arg>
                        <arg>-nowarn</arg>
                    </compilerArgs>
                    <showWarnings>false</showWarnings>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven.surefire.plugin.version}</version>
                <configuration>
                    <includes>
                        <include>**/*TestSuite.java</include>
                        <include>**/*Test.java</include>
                    </includes>
                    <testFailureIgnore>true</testFailureIgnore>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <version>${maven.source.plugin.version}</version>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>${maven.javadoc.plugin.version}</version>
                <executions>
                    <execution>
                        <id>attach-javadocs</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <source>${maven.compiler.source}</source>
                    <failOnError>true</failOnError>
                    <additionalOptions>-Xdoclint:none</additionalOptions>
                </configuration>
            </plugin>

            <!-- Maven Shade Plugin for creating fat JAR -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>${maven.shade.plugin.version}</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                        <configuration>
                            <finalName>arc-routing-library-${project.version}-fat</finalName>
                            <transformers>
                                <!-- Merge service files -->
                                <transformer implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer"/>
                                <!-- Merge Spring handlers -->
                                <transformer implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
                                    <resource>META-INF/spring.handlers</resource>
                                </transformer>
                                <!-- Merge Spring schemas -->
                                <transformer implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
                                    <resource>META-INF/spring.schemas</resource>
                                </transformer>
                                <!-- Set main class -->
                                <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                                    <mainClass>oarlib.test.GeneralTestbed</mainClass>
                                </transformer>
                            </transformers>
                            <!-- Exclude signature files to avoid conflicts -->
                            <filters>
                                <filter>
                                    <artifact>*:*</artifact>
                                    <excludes>
                                        <exclude>META-INF/*.SF</exclude>
                                        <exclude>META-INF/*.DSA</exclude>
                                        <exclude>META-INF/*.RSA</exclude>
                                    </excludes>
                                </filter>
                            </filters>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>teavm</id>
            <build>
                <plugins>
                    <!-- Compile only TeaVM-safe sources into a separate classes dir -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-compiler-plugin</artifactId>
                        <version>${maven.compiler.plugin.version}</version>
                        <executions>
                            <execution>
                                <id>compile-teavm-only</id>
                                <phase>process-classes</phase>
                                <goals>
                                    <goal>compile</goal>
                                </goals>
                                <configuration>
                                    <!-- Include core library, exclude JVM-only code for TeaVM -->
                                    <includes>
                                        <include>oarlib/**/*.java</include>
                                    </includes>
                                    <excludes>
                                        <!-- Exclude test code that uses file I/O and native methods -->
                                        <exclude>oarlib/test/**</exclude>
                                        <!-- Exclude problem I/O (uses java.nio.file.Paths) -->
                                        <exclude>oarlib/problem/impl/io/**</exclude>
                                        <!-- Exclude display/visualization (not needed for core algorithms) -->
                                        <exclude>oarlib/display/**</exclude>
                                        <!-- Exclude web components -->
                                        <exclude>oarlib/web/**</exclude>
                                    </excludes>
                                    <outputDirectory>${project.build.directory}/teavm-classes</outputDirectory>
                                    <failOnError>true</failOnError>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.teavm</groupId>
                        <artifactId>teavm-maven-plugin</artifactId>
                        <version>${teavm.version}</version>
                        <dependencies>
                            <dependency>
                                <groupId>org.teavm</groupId>
                                <artifactId>teavm-classlib</artifactId>
                                <version>${teavm.version}</version>
                            </dependency>
                        </dependencies>
                        <executions>
                            <execution>
                                <id>teavm-compile</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>compile</goal>
                                </goals>
                                <configuration>
                                    <mainClass>oarlib.teavm.TeaVMWrapper</mainClass>
                                    <classFiles>${project.build.directory}/teavm-classes</classFiles>
                                    <targetDirectory>${project.build.directory}/teavm</targetDirectory>
                                    <targetFileName>teavm.js</targetFileName>
                                    <minifying>true</minifying>
                                    <mainPageIncluded>true</mainPageIncluded>
                                    <debugInformationGenerated>false</debugInformationGenerated>
                                    <sourceMapsGenerated>false</sourceMapsGenerated>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>